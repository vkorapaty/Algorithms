	
if (end_t.wSecond > start_t.wSecond)	{
	if (end_t.wMilliseconds < start_t.wMilliseconds)	{
		fin_t.wSecond = end_t.wSecond - start_t.wSecond - 1;
		fin_t.wMilliseconds = end_t.wMilliseconds + (1000 - start_t.wMilliseconds);
	}
	else	{	//if (end_t.wMilliseconds >= start_t.wMilliseconds)	{
		fin_t.wSecond = end_t.wSecond - start_t.wSecond;
		fin_t.wMilliseconds = end_t.wMilliseconds - start_t.wMilliseconds;
	}
}

	
if (end_t.wSecond < start_t.wSecond)	{
	if (end_t.wMilliseconds < start_t.wMilliseconds)	{
		fin_t.wSecond = end_t.wSecond + (60 - start_t.wSecond) - 1;
		fin_t.wMilliseconds = end_t.wMilliseconds + (1000 - start_t.wMilliseconds);
	}
	else	{	//if (end_t.wMilliseconds >= start_t.wMilliseconds)	{
		fin_t.wSecond = end_t.wSecond + (60 - start_t.wSecond);
		fin_t.wMilliseconds = end_t.wMilliseconds - start_t.wMilliseconds;
	}
}

	
if (end_t.wSecond == start_t.wSecond)	{
	if (end_t.wMilliseconds < start_t.wMilliseconds)	{
		throw "TIME IS BROKEN; END BEFORE STARTING";
	}
	else	{	//if (end_t.wMilliseconds >= start_t.wMilliseconds)	{
		fin_t.wSecond = end_t.wSecond - start_t.wSecond;
		fin_t.wMilliseconds = end_t.wMilliseconds - start_t.wMilliseconds;
	}
}

cout << fin_t.wMinute << ":" << fin_t.wSecond << ":" << fin_t.wMilliseconds  << endl;


Those were the 3 cases, and their subcases, that I found necessary deal with to accurately determine total time passed. 
This can then be generalized for any set of time periods, provided that the time records do not exceed their time size
(if time type is hours, hours should not go past 23 or 12, depending on style used; or if minutes or hours, it should not
go over 59).

-----------------------------------------------------------------------------------

In retrospect, after completing this rather verbose method, it seems as if just working with subtracting the various times
and checking for negatives would've been significantly simpler and probably cleaner. Some of the same checks would have to be
made, but I think the code would be no where near as convoluted-ish.

Original:
	printf("\nThe start time was: %02d:%04d:%04d\n", start_t.wMinute, 
	start_t.wSecond, start_t.wMilliseconds);
	printf("The end time was: %02d:%04d:%04d\n", end_t.wMinute, end_t.wSecond, 
	end_t.wMilliseconds);
	printf("The %s test took: %02d:%04d:%04d\n", 
	testTitle.c_str(), end_t.wMinute - start_t.wMinute, end_t.wSecond - 
	start_t.wSecond, end_t.wMilliseconds - start_t.wMilliseconds);

